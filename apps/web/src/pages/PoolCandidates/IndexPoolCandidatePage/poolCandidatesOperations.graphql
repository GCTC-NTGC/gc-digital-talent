fragment poolCandidateTable on PoolCandidate {
  id
  pool {
    id
  }
  user {
    # Personal info
    id
    email
    firstName
    lastName
    telephone
    preferredLang
    preferredLanguageForInterview
    preferredLanguageForExam
    currentCity
    currentProvince
    citizenship
    armedForcesStatus

    # Language
    lookingForEnglish
    lookingForFrench
    lookingForBilingual
    bilingualEvaluation
    comprehensionLevel
    writtenLevel
    verbalLevel
    estimatedLanguageAbility

    # Gov info
    isGovEmployee
    govEmployeeType
    currentClassification {
      id
      group
      level
      name {
        en
        fr
      }
    }
    department {
      id
      departmentNumber
      name {
        en
        fr
      }
    }
    hasPriorityEntitlement
    priorityNumber

    # Employment equity
    isWoman
    isVisibleMinority
    hasDisability
    indigenousCommunities
    indigenousDeclarationSignature

    # Applicant info
    hasDiploma
    locationPreferences
    locationExemptions
    acceptedOperationalRequirements
    positionDuration
    priorityWeight
  }
  cmoIdentifier
  expiryDate
  status
  submittedAt
  notes
  archivedAt
  suspendedAt
}

fragment skillMatchDialog on User {
  experiences {
    id
    __typename
    user {
      id
      email
    }
    details
    skills {
      id
      key
      name {
        en
        fr
      }
      description {
        en
        fr
      }
      keywords {
        en
        fr
      }
      category
      experienceSkillRecord {
        details
      }
    }
    ... on AwardExperience {
      title
      issuedBy
      awardedDate
      awardedTo
      awardedScope
    }
    ... on CommunityExperience {
      title
      organization
      project
      startDate
      endDate
    }
    ... on EducationExperience {
      institution
      areaOfStudy
      thesisTitle
      startDate
      endDate
      type
      status
    }
    ... on PersonalExperience {
      title
      description
      startDate
      endDate
    }
    ... on WorkExperience {
      role
      organization
      division
      startDate
      endDate
    }
  }
}

fragment poolCandidateForm on PoolCandidate {
  id
  pool {
    id
    name {
      en
      fr
    }
    stream
    classifications {
      id
      group
      level
    }
  }
  user {
    id
    email
  }
  cmoIdentifier
  expiryDate
  status
}

fragment poolCandidateUserSkillFragment on UserSkill {
  id
  user {
    id
  }
  skill {
    id
    key
    category
    name {
      en
      fr
    }
  }
  skillLevel
  topSkillsRank
  improveSkillsRank
}

query getPoolCandidate($id: UUID!) {
  poolCandidate(id: $id) {
    ...poolCandidateTable
  }
}

query GetPoolCandidatesPaginated(
  $where: PoolCandidateSearchInput
  $first: Int
  $page: Int
  $sortingInput: QueryPoolCandidatesPaginatedOrderByRelationOrderByClause!
) {
  poolCandidatesPaginated(
    where: $where
    first: $first
    page: $page
    orderBy: [
      { column: "status_weight", order: ASC }
      { user: { aggregate: MAX, column: PRIORITY_WEIGHT }, order: ASC }
      $sortingInput
    ]
  ) {
    data {
      id
      poolCandidate {
        ...poolCandidateTable
      }
      skillCount
    }
    paginatorInfo {
      count
      currentPage
      firstItem
      hasMorePages
      lastItem
      lastPage
      perPage
      total
    }
  }
}

query getPoolCandidatesByPool($id: UUID!) {
  pool(id: $id) {
    poolCandidates {
      ...poolCandidateTable
    }
  }
}

query getSkillMatchDialogData($id: UUID!) {
  user(id: $id) {
    ...skillMatchDialog
  }
}

mutation createPoolCandidate($poolCandidate: CreatePoolCandidateAsAdminInput!) {
  createPoolCandidateAsAdmin(poolCandidate: $poolCandidate) {
    pool {
      id
    }
    user {
      id
    }
    cmoIdentifier
    expiryDate
    status
  }
}

mutation updatePoolCandidate(
  $id: ID!
  $poolCandidate: UpdatePoolCandidateAsAdminInput!
) {
  updatePoolCandidateAsAdmin(id: $id, poolCandidate: $poolCandidate) {
    cmoIdentifier
    expiryDate
    status
  }
}

mutation deletePoolCandidate($id: ID!) {
  deletePoolCandidate(id: $id) {
    id
  }
}

query getCandidateProfile($id: UUID!) {
  poolCandidate(id: $id) {
    user {
      id
      email
      firstName
      lastName
      telephone
      preferredLang
      preferredLanguageForInterview
      preferredLanguageForExam
      lookingForEnglish
      lookingForFrench
      lookingForBilingual
      bilingualEvaluation
      comprehensionLevel
      writtenLevel
      verbalLevel
      estimatedLanguageAbility
      isGovEmployee
      govEmployeeType
      hasPriorityEntitlement
      priorityNumber
      locationPreferences
      locationExemptions
      positionDuration
      acceptedOperationalRequirements
      isWoman
      indigenousCommunities
      indigenousDeclarationSignature
      isVisibleMinority
      hasDisability
      department {
        id
        departmentNumber
        name {
          en
          fr
        }
      }
      currentClassification {
        id
        group
        level
        name {
          en
          fr
        }
      }
      experiences {
        id
        __typename
        user {
          id
          email
        }
        details
        skills {
          id
          key
          name {
            en
            fr
          }
          description {
            en
            fr
          }
          keywords {
            en
            fr
          }
          category
          experienceSkillRecord {
            details
          }
        }
        ... on AwardExperience {
          title
          issuedBy
          awardedDate
          awardedTo
          awardedScope
        }
        ... on CommunityExperience {
          title
          organization
          project
          startDate
          endDate
        }
        ... on EducationExperience {
          institution
          areaOfStudy
          thesisTitle
          startDate
          endDate
          type
          status
        }
        ... on PersonalExperience {
          title
          description
          startDate
          endDate
        }
        ... on WorkExperience {
          role
          organization
          division
          startDate
          endDate
        }
      }
    }
  }
}
