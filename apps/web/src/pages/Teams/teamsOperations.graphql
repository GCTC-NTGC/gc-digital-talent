fragment team on Team {
  id
  name
  contactEmail
  displayName {
    en
    fr
  }
  departments {
    id
    departmentNumber
    name {
      en
      fr
    }
  }
  description {
    en
    fr
  }
  roleAssignments {
    id
    role {
      id
      name
      isTeamBased
      displayName {
        en
        fr
      }
    }
    user {
      id
      email
      firstName
      lastName
    }
  }
}

query ListTeams {
  teams {
    id
    name
    contactEmail
    displayName {
      en
      fr
    }
    departments {
      id
      departmentNumber
      name {
        en
        fr
      }
    }
    description {
      en
      fr
    }
  }
}

query MeRoleAssignments {
  me {
    authInfo {
      id
      roleAssignments {
        id
        role {
          id
          name
          displayName {
            en
            fr
          }
          isTeamBased
        }
        team {
          id
          name
        }
      }
    }
  }
}

query ListRoles {
  roles {
    id
    name
    isTeamBased
    displayName {
      en
      fr
    }
  }
}

query GetTeam($teamId: UUID!) {
  team(id: $teamId) {
    ...team
  }
}

mutation UpdateTeam($teamId: UUID!, $team: UpdateTeamInput!) {
  updateTeam(id: $teamId, team: $team) {
    id
  }
}

query ViewTeam($id: UUID!) {
  team(id: $id) {
    id
    name
    contactEmail
    displayName {
      en
      fr
    }
    description {
      en
      fr
    }
    departments {
      id
      departmentNumber
      name {
        en
        fr
      }
    }
  }
}

query TeamMembers($id: UUID!) {
  team(id: $id) {
    ...team
  }
  roles {
    id
    name
    isTeamBased
    displayName {
      en
      fr
    }
  }
  users {
    id
    email
    firstName
    lastName
    telephone
    preferredLang
    preferredLanguageForInterview
    preferredLanguageForExam
  }
}

query TeamName($id: UUID!) {
  team(id: $id) {
    id
    displayName {
      en
      fr
    }
  }
}

mutation CreateTeam($team: CreateTeamInput!) {
  createTeam(team: $team) {
    id
  }
}

query AllUsersNames {
  userPublicProfiles {
    id
    firstName
    lastName
    email
  }
}

mutation UpdateUserTeamRoles($teamRoleAssignments: UpdateUserTeamRolesInput!) {
  updateUserTeamRoles(teamRoleAssignments: $teamRoleAssignments) {
    roleAssignments {
      role {
        name
      }
      user {
        id
        firstName
        lastName
      }
    }
  }
}
