fragment pool on Pool {
  id
  owner {
    id
    firstName
    lastName
    email
  }
  name {
    en
    fr
  }
  keyTasks {
    en
    fr
  }
  whatToExpect {
    en
    fr
  }
  classifications {
    id
    name {
      en
      fr
    }
    group
    level
  }
  operationalRequirements
  stream
  processNumber
  team {
    id
    name
    displayName {
      en
      fr
    }
  }
}

query GetBasicPoolInfo($poolId: UUID!) {
  pool(id: $poolId) {
    id
    name {
      en
      fr
    }
    stream
    classifications {
      id
      group
      level
    }
  }
}

query getPools {
  pools {
    id
    owner {
      id
      email
      firstName
      lastName
    }
    name {
      en
      fr
    }
    classifications {
      id
      group
      level
    }
    status
    stream
    processNumber
    createdDate
  }
}

mutation createPool($userId: ID!, $teamId: ID!, $pool: CreatePoolInput!) {
  createPool(userId: $userId, teamId: $teamId, pool: $pool) {
    id
    name {
      en
      fr
    }
  }
}

query getMePoolCreation {
  me {
    id
    roleAssignments {
      id
      team {
        id
        name
        displayName {
          en
          fr
        }
      }
    }
  }
  classifications {
    name {
      en
      fr
    }
    level
    group
    id
  }
}

# Note: unsure where this is used but it is needed by
# cypress
fragment genericJobTitle on GenericJobTitle {
  id
  key
  name {
    en
    fr
  }
  classification {
    id
    name {
      en
      fr
    }
    group
    level
    minSalary
    maxSalary
  }
}

query getGenericJobTitle($id: UUID!) {
  genericJobTitle(id: $id) {
    ...genericJobTitle
  }
}
query GetGenericJobTitles {
  genericJobTitles {
    ...genericJobTitle
  }
}

query allTeams {
  teams {
    id
    name
    displayName {
      en
      fr
    }
  }
}
