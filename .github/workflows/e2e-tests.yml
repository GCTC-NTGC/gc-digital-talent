# Changes to workflow name require changes to badge URL in README.md
name: e2e-tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

  pull_request:
    paths-ignore:
      - "**.md"

# Concurrency is used to cancel other currently-running jobs, to preserve
# compute resources and cumulative build hours. (ie. If you push twice in a
# row, this will cancel the previous run.)
# See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  # This scopes the group to:
  # - the same workflow,
  # - the same event type, and
  # - the same branch name
  # e.g., my-workflow-pull_request-feature/123-my-thing
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  run-cypress:
    # Platform recommended in cypress-io/github-action docs.
    runs-on: ubuntu-20.04
    env:
      # Use native docker command within docker-compose
      COMPOSE_DOCKER_CLI_BUILD: 1
      # Use buildkit to speed up docker command
      DOCKER_BUILDKIT: 1
      NPM_VERSION: '8.3.0'
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      # This uses GitHub Action cache for docker container layers
      # See: https://github.com/marketplace/actions/docker-layer-caching
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore a failure of this step and avoid terminating the job.
        continue-on-error: true
        # By default, this cache is keyed to the workflow name. We ar
        # setting a shared key for the docker cache to be shared
        # across multiple workflows.
        with:
          key: docker-{hash}
          restore-keys: |
            docker-

      - name: Serve app via docker-compose
        # Need to include --build as we're caching layers.
        run: docker-compose up --detach --build

      - name: "Run: setup.sh"
        run: docker-compose run --rm maintenance bash setup.sh

      - uses: actions/setup-node@v2.5.1
        with:
          node-version-file: 'frontend/.nvmrc'
          cache: npm
          cache-dependency-path: |
            frontend/package-lock.json

      - name: Upgrade to latest npm
        run: npm install --global npm@${{ env.NPM_VERSION }}

      - name: "Run Cypress tests: all"
        uses: cypress-io/github-action@v2.11.8
        with:
          working-directory: ./frontend
          spec: "**/*.spec.js"
          browser: chrome
          # See: https://github.com/cypress-io/github-action/issues/489#issuecomment-1021379037
          command-prefix: "--"

      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      - name: Save screenshot artefacts
        uses: actions/upload-artifact@v3.0.0
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - name: Save video artefacts
        uses: actions/upload-artifact@v3.0.0
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos

      - name: Check status of containers
        if: failure()
        run: docker-compose ps

      - name: 'Check logs: PHP container'
        if: failure()
        run: docker-compose logs php
