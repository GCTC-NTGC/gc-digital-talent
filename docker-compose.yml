version: '3.8'

services:

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_PASSWORD: password1234
    volumes:
      - ./infrastructure/db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    links:
      - postgres
    ports:
      - 8080:8080

  frontend:
    # build: ./frontend
    image: gc_digital_talent_frontend:latest
    ports:
      - 8002:80
      - 8003:443
    env_file:
      - frontend/admin/.apache_env

  # php:
  #   build: ./infrastructure/php-container
  #   working_dir: /var/www/html
  #   restart: always
  #   volumes:
  #     - ./infrastructure/php-container/src:/var/www/html/
  #     - ./api:/var/www/html/api
  #     - ./frontend:/var/www/html/frontend
  #     - ./tc-report:/var/www/html/tc-report
  #   ports:
  #     - 8000:80
  #     - 8001:443
  #   env_file:
  #     - ./frontend/.apache_env

  # maintenance:
  #   build: ./infrastructure/maintenance-container
  #   working_dir: /root/scripts
  #   deploy:
  #     mode: replicated
  #     replicas: 0
  #   environment:
  #     # Prevent `npm install` from trying to install Cypress in the container,
  #     # which is not required and just creates permission issues.
  #     # See: https://docs.cypress.io/guides/getting-started/installing-cypress#Skipping-installation
  #     - CYPRESS_INSTALL_BINARY=0
  #   volumes:
  #     - maintenancedata:/root
  #     - ./maintenance/scripts:/root/scripts
  #     - ./api:/var/www/html/api
  #     - ./frontend:/var/www/html/frontend
  #     - ./tc-report:/var/www/html/tc-report

  # We proxy the auth server through apache, so it's at localhost.
  # E.g., http://localhost:8000/oxauth/.well-known/openid-configuration
  #
  # We shouldn't need to expose mock-oauth2-server directly (outside the apache
  # proxy), but if this is required:
  #
  #   1. uncomment the container configuration lines below.
  #   2. add this entry to your `hosts` file:
  #
  #       auth.talent.canada.test 127.0.0.1
  #
  #   3. Rebuild docker container:
  #
  #       $ docker-compose up --detach --build mock-auth
  #
  #   4. Confirm working by visiting:
  #
  #       http://auth.talent.canada.test:8081/oxauth/.well-known/openid-configuration
  #
  mock-auth:
    # See: https://github.com/navikt/mock-oauth2-server#standalone-server
    image: ghcr.io/navikt/mock-oauth2-server:0.4.8
    volumes:
      - ./infrastructure/conf:/app/conf
    environment:
      # Things to note in config:
      # - we mock a response but leave out "sub", so that value entered in fake
      #   login form will be used.
      # - we match specifically for client_id `fake-development-client-key`,
      #   which must be set in `.env`.
      # - we set interactiveLogin:true, for easy selection of any test user
      #   (for which subject/sub will be something like `admin@test.com`).
      JSON_CONFIG_PATH: /app/conf/mock-oauth2-server.json
    volumes:
      - ./infrastructure/conf:/app/conf
      # Uncomment for direct access without proxy.
      # We override default port 8080 sincer already used by adminer container.
      #SERVER_PORT: 8081
    # Uncomment for direct access without proxy.
    #ports:
    #  - 8081:8081
    #hostname: auth.talent.canada.test

volumes:
  pgdata:
  maintenancedata:
