version: '3.8'

services:

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_PASSWORD: password1234
    volumes:
      - ./infrastructure/db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    # ports:
      # - "5432:5432" # for convenience/troubleshooting

  adminer:
    image: adminer
    restart: always
    # links:
      # - postgres # TODO: not needed?
    # ports:
      # - 8080:8080 # for convenience/troubleshooting

  frontend:
    # build: ./frontend
    image: gc_digital_talent_frontend:latest
    ports:
      - 8002:80
      - 8003:443
    env_file:
      - frontend/admin/.apache_env

  # php:
  #   build: ./php-container
  #   working_dir: /var/www/html
  #   restart: always
  #   volumes:
  #     - ./php-container/src:/var/www/html/
  #     - ../api:/var/www/html/api
  #     - ../auth:/var/www/html/auth
  #     - ../frontend:/var/www/html/frontend
  #     - ../tc-report:/var/www/html/tc-report
  #   ports:
  #     - 8000:80
  #     - 8001:443
  #   env_file:
  #     - ../frontend/admin/.env

  # maintenance:
  #   build: ./infrastructure/maintenance-container
  #   working_dir: /root/scripts
  #   deploy:
  #     mode: replicated
  #     replicas: 0
  #   environment:
  #     # Prevent `npm install` from trying to install Cypress in the container,
  #     # which is not required and just creates permission issues.
  #     # See: https://docs.cypress.io/guides/getting-started/installing-cypress#Skipping-installation
  #     - CYPRESS_INSTALL_BINARY=0
  #   volumes:
  #     - maintenancedata:/root
  #     - ../maintenance/scripts:/root/scripts
  #     - ../api:/var/www/html/api
  #     - ../auth:/var/www/html/auth
  #     - ../frontend:/var/www/html/frontend
  #     - ../tc-report:/var/www/html/tc-report

  api:
    # build: ./api
    image: gc_digital_talent_api:latest
    depends_on:
      - postgres
    ports:
      - 8004:80
      - 8005:443


volumes:
  pgdata:
  maintenancedata:
