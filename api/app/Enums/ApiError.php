<?php

namespace App\Enums;

use App\Traits\HasLocalization;

enum ApiError
{
    use HasLocalization;

    case APPLICATION_DELETE_FAILED;
    case APPLICATION_EDUCATION_REQUIREMENT_INCOMPLETE;
    case APPLICATION_EXISTS;
    case APPLICATION_INVALID_STATUS_DELETE;
    case APPLICATION_MISSING_ESSENTIAL_SKILLS;
    case APPLICATION_MISSING_LANGUAGE_REQUIREMENTS;
    case APPLICATION_MISSING_QUESTION_RESPONSE;
    case APPLICATION_NOT_SUBMITTED;
    case APPLICATION_POOL_CLOSED;
    case APPLICATION_POOL_NOT_PUBLISHED;
    case APPLICATION_SIGNATURE_REQUIRED;
    case APPLICATION_SUBMITTED;

    case ASSESSMENT_RESULT_MISSING_SKILL;
    case ASSESSMENT_RESULT_EDUCATION_ASSESSMENT_SKILL_JUSTIFICATION_PROHIBITED;
    case ASSESSMENT_RESULT_DECISION_LEVEL_PROHIBITED;
    case ASSESSMENT_RESULT_SKILL_ASSESSMENMT_EDUCATION_JUSTIFICATION_PROHIBITED;

    case ASSESSMENT_STEP_MISSING_SKILLS;
    case ASSESSMENT_STEP_CANNOT_SWAP;
    case ASSESSMENT_STEP_DIFFERENT_POOL;
    case ASSESSMENT_STEP_REFERENCES_MULTIPLE_POOLS;

    case COMMUNITY_KEY_IN_USE;

    case DEPARTMENT_NUMBER_IN_USE;

    case EMAIL_VERIFICATION_FAILED;

    case ENUM_NOT_FOUND;
    case ENUM_NOT_LOCALIZED;

    case EXPIRTY_DATE_REQUIRED;
    case EXPIRY_DATE_AFTER_TODAY;

    case NOTIFICATION_FAMILY_CANNOT_ENABLE;

    case POOL_SKILL_NOT_ASSESSED;

    case POOL_CANDIDATE_INVALID_STATUS_DISQUALIFICATION;
    case POOL_CANDIDATE_INVALID_STATUS_PLACING;
    case POOL_CANDIDATE_INVALID_STATUS_QUALIFICATION;
    case POOL_CANDIDATE_INVALID_STATUS_REVERT_FINAL_DECISION;

    case PROCESS_ARCHIVE_INVALID_STATUS;
    case PROCESS_CLOSING_DATE_EXTEND;
    case PROCESS_CLOSING_DATE_FUTURE;
    case PROCESS_CANNOT_REOPEN_DELETED_SKILL;
    case PROCESS_UNARCHIVE_INVALID_STATUS;

    case ROLE_NOT_FOUND;
    case ROLE_NOT_TEAM_ROLE;

    case SKILL_DELETED;
    case SKILL_DELETE_IN_USE;
    case SKILL_ESSENTIAL_CONTAINS_DELETED;
    case SKILL_NONESSENTIAL_CONTAINS_DELETED;

    case TEAM_DOES_NOT_EXIST;
    case TEAM_ID_REQUIRED;
    case TEAM_NAME_IN_USE;

    case USER_BOTH_STATUS_NON_STATUS_FIRST_NATIONS;
    case USER_PROFILE_INCOMPLETE;

    case USER_SKILL_EXISTS;

    public function localizedErrorMessage()
    {
        $localizedEnum = $this->localize();

        return [
            'code' => $localizedEnum['value'],
            'en' => $localizedEnum['label']['en'],
            'fr' => $localizedEnum['label']['fr'],
        ];
    }

    public static function getLangFilename(): string
    {
        return 'api_error';
    }
}
