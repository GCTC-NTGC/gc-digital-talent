import fr from "./lang/frCompiled.json";
import richTextElements from "./components/richTextElements";
import LanguageProvider from "./components/LanguageProvider";
import LocaleProvider from "./components/LocaleProvider";
import NestedLanguageProvider from "./components/NestedLanguageProvider";
import useIntlLanguages from "./hooks/useIntlMessages";
import useLocale from "./hooks/useLocale";
import {
  isLocale,
  getLocale,
  oppositeLocale,
  changeLocale,
  localizePath,
  localeRedirect,
  getLocalizedName,
  localizeCurrency,
  localizeSalaryRange,
} from "./utils/localize";
import {
  apiMessages,
  commonMessages,
  dateMessages,
  errorMessages,
  navigationMessages,
  tryFindMessageDescriptor,
  uiMessages,
  formMessages,
  richTextMessages,
} from "./messages";
import {
  getEmploymentEquityGroup,
  getEmploymentEquityStatement,
  getCitizenshipStatusesProfile,
  getArmedForcesStatusesProfile,
  getEducationRequirementOption,
  EmploymentDuration,
  getEmploymentDuration,
  getWorkRegionsDetailed,
  getOperationalRequirement,
  getGovEmployeeType,
  getAbbreviations,
  OperationalRequirements,
  GenericJobTitlesSorted,
  getSkillLevelName,
  getSkillLevelDefinition,
  getSkillLevelMessages,
  MentorshipStatus,
  getMentorshipStatus,
  getMentorshipInterest,
  ExecCoachingStatus,
  getExecCoachingStatus,
  getExecCoachingInterest,
  getTalentNominationLateralMovementOption,
  getLearningOpportunitiesInterest,
  getWfaInterestFirstPerson,
} from "./messages/localizedConstants";
import {
  type MaybeLocalizedEnums,
  type GenericLocalizedEnum,
  enumInputToLocalizedEnum,
  getLocalizedEnumByValue,
  getLocalizedEnumStringByValue,
  sortAwardedScope,
  sortAwardedTo,
  sortCandidateRemovalReason,
  sortEducationStatus,
  sortEducationType,
  sortWorkRegion,
  sortFlexibleWorkLocations,
  sortEvaluatedLanguageAbility,
  sortOpportunityLength,
  sortPlacementType,
  sortPoolCandidateSearchRequestReason,
  sortPoolCandidateSearchStatus,
  sortPoolLanguage,
  sortPriorityWeight,
  sortSecurityStatus,
  sortWfaInterest,
  localizedEnumToInput,
  localizedEnumArrayToInput,
  narrowEnumType,
  sortLocalizedEnumOptions,
  ENUM_SORT_ORDER,
} from "./utils/enum";
import type { Locales, Messages } from "./types";
import { appendLanguageName } from "./utils/lang";

export {
  richTextElements,
  isLocale,
  getLocale,
  oppositeLocale,
  changeLocale,
  localizePath,
  localeRedirect,
  getLocalizedName,
  localizeCurrency,
  localizeSalaryRange,
  apiMessages,
  commonMessages,
  errorMessages,
  dateMessages,
  navigationMessages,
  uiMessages,
  formMessages,
  richTextMessages,
  tryFindMessageDescriptor,
  LanguageProvider,
  LocaleProvider,
  NestedLanguageProvider,
  useIntlLanguages,
  useLocale,
  getLocalizedEnumByValue,
  getLocalizedEnumStringByValue,
  enumInputToLocalizedEnum,
  localizedEnumToInput,
  localizedEnumArrayToInput,
  narrowEnumType,
  sortAwardedScope,
  sortAwardedTo,
  sortCandidateRemovalReason,
  sortEducationStatus,
  sortEducationType,
  sortWorkRegion,
  sortFlexibleWorkLocations,
  sortEvaluatedLanguageAbility,
  sortOpportunityLength,
  sortPlacementType,
  sortPoolCandidateSearchRequestReason,
  sortPoolCandidateSearchStatus,
  sortPoolLanguage,
  sortPriorityWeight,
  sortSecurityStatus,
  sortWfaInterest,
  sortLocalizedEnumOptions,
  appendLanguageName,
};

export {
  getEmploymentEquityGroup,
  getEmploymentEquityStatement,
  getCitizenshipStatusesProfile,
  getArmedForcesStatusesProfile,
  getEducationRequirementOption,
  EmploymentDuration,
  getEmploymentDuration,
  getWorkRegionsDetailed,
  getOperationalRequirement,
  getGovEmployeeType,
  OperationalRequirements,
  GenericJobTitlesSorted,
  getAbbreviations,
  getSkillLevelName,
  getSkillLevelDefinition,
  getSkillLevelMessages,
  MentorshipStatus,
  getMentorshipStatus,
  getMentorshipInterest,
  ExecCoachingStatus,
  getExecCoachingStatus,
  getExecCoachingInterest,
  getTalentNominationLateralMovementOption,
  getLearningOpportunitiesInterest,
  getWfaInterestFirstPerson,
  ENUM_SORT_ORDER,
};

export type { Locales, Messages, MaybeLocalizedEnums, GenericLocalizedEnum };
export { fr };
