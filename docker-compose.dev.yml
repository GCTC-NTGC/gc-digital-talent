# docker-compose -f docker-compose.dev.yml up --detach --build

services:
  postgres:
    image: postgres:12.15
    restart: always
    environment:
      POSTGRES_PASSWORD: password1234
    volumes:
      - ./infrastructure/db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  api:
    build:
      context: ./api
      dockerfile: dev.Dockerfile
    volumes:
      - ./api:/home/site/wwwroot
    ports:
      - "8001:8001"

  web:
    build:
      context: ./
      dockerfile: apps/web/dev.Dockerfile
    volumes:
      - ./:/var/www/html
    ports:
      - "8000:8000"

  mock-auth:
    # See: https://github.com/navikt/mock-oauth2-server#standalone-server
    image: ghcr.io/navikt/mock-oauth2-server:2.1.1
    volumes:
      - ./infrastructure/conf:/app/conf
    # Container shuts down with exit code 143 instead of the standard "0", so
    # we ensure it comes back up after a Docker Desktop console restart.
    # See: https://docs.docker.com/config/containers/start-containers-automatically/#use-a-restart-policy
    restart: unless-stopped
    environment:
      # Things to note in config:
      # - we mock a response but leave out "sub", so that value entered in fake
      #   login form will be used.
      # - we match specifically for client_id `fake-development-client-key`,
      #   which must be set in `.env`.
      # - we set interactiveLogin:true, for easy selection of any test user
      #   (for which subject/sub will be something like `admin@test.com`).
      JSON_CONFIG_PATH: /app/conf/mock-oauth2-server.json
      # Uncomment for direct access without proxy.
      # We override default port 8080 sincer already used by adminer container.
      SERVER_PORT: 8002
    # Uncomment for direct access without proxy.
    ports:
      - 8002:8002
    #hostname: auth.talent.canada.test

volumes:
  pgdata:
