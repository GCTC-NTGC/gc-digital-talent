fragment poolCandidateTable on PoolCandidate {
  id,
  pool {
    id,
    name {
      en,
      fr
    },
    classifications {
      id,
      name {
        en,
        fr
      },
      group,
      level
    },
  },
  user {
    id,
    firstName,
    lastName,
    email,
    preferredLang
    telephone
  },
  cmoIdentifier,
  expiryDate,
  isWoman,
  hasDisability,
  isIndigenous,
  isVisibleMinority,
  hasDiploma,
  languageAbility,
  locationPreferences,
  acceptedOperationalRequirements {
    id,
    name {
      en,
      fr
    }
  },
  expectedSalary,
  expectedClassifications {
    id,
    name {
      en,
      fr
    }
    group,
    level
  }
  cmoAssets {
    id,
    name {
      en,
      fr
    }
  },
  status
}

fragment poolCandidateForm on PoolCandidate {
  id
  pool {
    id
    name {
      en
      fr
    }
  }
  user {
    id
    email
  }
  cmoIdentifier
  expiryDate
  isWoman
  hasDisability
  isIndigenous
  isVisibleMinority
  hasDiploma
  languageAbility
  locationPreferences
  acceptedOperationalRequirements {
    id
    key
    name {
      en
      fr
    }
  }
  expectedSalary
  expectedClassifications {
    id
    group
    level
  }
  cmoAssets {
    id
    key
    name {
      en
      fr
    }
  }
  status
}
query getPoolCandidate($id: Float!) {
  poolCandidate(id: $id) {
    ...poolCandidateTable
  }
}

query GetPoolCandidates {
  poolCandidates {
    ...poolCandidateTable
  }
}

query getPoolCandidatesByPool($id: Float!) {
  pool(id: $id) {
    poolCandidates {
      ...poolCandidateTable
    }
  }
}

query getCreatePoolCandidateData {
  classifications {
    id
    group
    level
  }
  cmoAssets {
    id
    key
    name {
      en
      fr
    }
  }
  operationalRequirements {
    id
    key
    name {
      en
      fr
    }
  }
  pools {
    id
    name {
      en
      fr
    }
  }
  users {
    id
    firstName
    lastName
    email
    preferredLang
    telephone
  }
}

query getUpdatePoolCandidateData($id: Float!) {
  classifications {
    id
    group
    level
  }
  users {
    id
    firstName
    lastName
  }
  cmoAssets {
    id
    key
    name {
      en
      fr
    }
  }
  operationalRequirements {
    id
    key
    name {
      en
      fr
    }
  }
  pools {
    id
    name {
      en
      fr
    }
  }
  poolCandidate(id: $id) {
      ...poolCandidateForm
  }
}

mutation createPoolCandidate($poolCandidate: CreatePoolCandidateInput!) {
  createPoolCandidate(poolCandidate: $poolCandidate) {
    pool {
      id
    }
    user {
      id
    }
    cmoIdentifier
    expiryDate
    isWoman
    hasDisability
    isIndigenous
    isVisibleMinority
    hasDiploma
    languageAbility
    locationPreferences
    acceptedOperationalRequirements {
      id
    }
    expectedSalary
    expectedClassifications {
      id
    }
    cmoAssets {
      id
    }
    status
  }
}

mutation updatePoolCandidate($id: Float!, $poolCandidate: UpdatePoolCandidateInput!) {
  updatePoolCandidate(id: $id, poolCandidate: $poolCandidate) {
    cmoIdentifier
    expiryDate
    isWoman
    hasDisability
    isIndigenous
    isVisibleMinority
    hasDiploma
    languageAbility
    locationPreferences
    acceptedOperationalRequirements {
      id
    }
    expectedSalary
    expectedClassifications {
      id
    }
    cmoAssets {
      id
    }
    status
  }
}
