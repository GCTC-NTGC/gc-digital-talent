name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr: none
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
variables:
  phpVersion: "8.2"

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: build_artifact
    displayName: Build artifact
    pool:
      vmImage: ubuntu-20.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: infrastructure/bin/set_php_versions.sh ${{ variables.phpVersion }}
        displayName: "PHP version"

      - script: infrastructure/bin/deploy.sh -d -r $(System.DefaultWorkingDirectory)
        displayName: Dependencies
        env:
          API_URI: /graphql
          ADMIN_APP_DIR: /admin
          CYPRESS_INSTALL_BINARY: 0

      - task: ArchiveFiles@2
        displayName: "Archive Files"
        inputs:
          rootFolderOrFile: $(System.DefaultWorkingDirectory)
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/Application_$(Build.BuildId).zip"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: gcDigitalTalent"
        inputs:
          ArtifactName: gcDigitalTalent

- stage: Test
  displayName: Test stage
  dependsOn: Build
  jobs:
  - job: run_playwright_tests
    displayName: Run Playwright tests
    pool:
      vmImage: ubuntu-20.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: gcDigitalTalent
          downloadPath: $(System.DefaultWorkingDirectory)/artifacts

      - script: npm install
        displayName: "Install Node.js dependencies"

      - script: npx playwright install --with-deps
        displayName: "Install Playwright browsers"

      - script: npx playwright test
        displayName: "Run playwright tests"
