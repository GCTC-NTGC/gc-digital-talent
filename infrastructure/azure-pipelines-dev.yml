name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr: none
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
variables:
  phpVersion: "8.2"

jobs:
  - job: build_artifact
    displayName: Build artifact
    pool:
      vmImage: ubuntu-20.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: infrastructure/bin/set_php_versions.sh ${{ variables.phpVersion }}
        displayName: "PHP version"

        # -d option to install dev dependencies and -r option to specify the root directory
      - script: infrastructure/bin/deploy.sh -d -r $(System.DefaultWorkingDirectory)
        displayName: Dependencies
        env:
          API_URI: /graphql
          # We don't need Cypress in this environment, and so this avoid permission errors of installing it.
          # See: https://docs.cypress.io/guides/getting-started/installing-cypress#Skipping-installation
          CYPRESS_INSTALL_BINARY: 0

      - task: ArchiveFiles@2
        displayName: "Archive Files"
        inputs:
          rootFolderOrFile: $(System.DefaultWorkingDirectory)
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/Application_$(Build.BuildId).zip"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: gcDigitalTalent"
        inputs:
          ArtifactName: gcDigitalTalent
  - job: run_playwright_tests
    displayName: Run Playwright tests
    pool:
      vmImage: ubuntu-20.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: npm install
        displayName: "Install Node.js dependencies"

      - script: npx playwright install
        displayName: "Install Playwright browsers"

      - script: npm run e2e:playwright:chromium
        displayName: "Run Chromium tests"

      - script: npm run e2e:playwright:firefox
        displayName: "Run Firefox tests"

      - script: npm run e2e:playwright:webkit
        displayName: "Run WebKit tests"
