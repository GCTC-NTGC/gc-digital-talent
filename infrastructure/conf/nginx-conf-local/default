
# enable rewrite logging for debugging
error_log /var/log/nginx/error.log notice;
# rewrite_log on;

# never cache locally
# Set default $hdr_cache_control if Cache-Control does not exist
# https://www.axllent.org/docs/add-nginx-headers-if-not-set/
map $upstream_http_cache_control $hdr_cache_control {
    '' "no-store";
}

server {
    #proxy_cache cache;
    #proxy_cache_valid 200 1s;

    # on the servers, the pages are served on 8080 then reverse proxied upstream
    listen 8080;
    listen [::]:8080;
    root /home/site/wwwroot;
    index  index.php index.html index.htm;
    #server_name localhost;

    # redirect server error pages
    error_page   404  /404;

    # Disable .git directory
    location ~ /\.git {
        deny all;
        access_log off;
        log_not_found off;
    }

    # The following are only added if they do not already exist.  Avoid overwriting headers from PHP.
    add_header Cache-Control $hdr_cache_control;

    location = /robots.txt {
        alias /home/site/wwwroot/infrastructure/conf/dev.robots.txt;
    }

    location = /restricted.html {
        alias /home/site/wwwroot/apps/web/dist/restricted.html;
    }

    # Permanent redirects to avoid dead links
    location = /en/communities/digital-talent { return 301 https://www.canada.ca/en/government/system/digital-government/gcdigital-community.html; }
    location = /fr/communities/digital-talent { return 301 https://www.canada.ca/fr/gouvernement/systeme/gouvernement-numerique/collectivite-gcnumerique.html; }

    # Permanent redirect within the same domain with relative path
    location = /en/talent/search {
        absolute_redirect off;
        return 301 /en/search;
    }
    location = /fr/talent/search {
        absolute_redirect off;
        return 301 /fr/search;
    }

    # Permanent redirect for IAP french vanity url
    location = /apprentis-autochtone-ti {
        absolute_redirect off;
        return 301 /fr/indigenous-it-apprentice;
    }

    # local auth
    location ^~ /oxauth {
        proxy_pass "http://mock-auth:8080";
        # Header X-Forwarded-Proto tells mock-oauth2-proxy to use Host for
        # urls in response from /oxauth/.well-known/openid-confifiguration
        #
        # See: https://github.com/navikt/mock-oauth2-server/pull/187
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header Host localhost:8000;
        break;
    }

    # enable serving gzip-ed files
    gzip_static on;

    # api
    location = /phpinfo.php {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/phpinfo.php;
    }
    location = /xdebuginfo.php {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/xdebuginfo.php;
    }
    location = /graphql {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }
    location = /graphiql {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }
    location = /login {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }
    location = /register {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }
    location = /auth-callback {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
        ## TUNE buffers to avoid "upstream sent too big headers" error ##
        fastcgi_buffers 16 32k;
        fastcgi_buffer_size 64k;
        fastcgi_busy_buffers_size 64k;
    }
    location = /refresh {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }
    location ~ "^/api(/(.*))?$" {
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/site/wwwroot/api/public/index.php;
    }

    # rewrite root-level possible lang prefix to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/?$" {
        rewrite "^(?:/[a-z]{2})?/?$" /apps/web/dist/index.html break;
    }

    # run time variables
    location = /config.js {
        alias /home/site/wwwroot/apps/web/dist/config.js;
    }

    # rewrite tc-report static files to "tc-report/_site"
    location ~ "^/tc-report/(.*\.(?:png|ico|gif|jpg|jpeg|svg|css|js|pdf|doc|docx|map|webmanifest|webp))$" {
        rewrite "^/tc-report/(.*\.(:?png|ico|gif|jpg|jpeg|svg|css|js|pdf|doc|docx|map|webmanifest|webp))$" /tc-report/_site/$1 break;
    }

    # rewrite talent static contenthashed files to "apps/web/dist"
    location ~ "^(/(?:.*\.)?[a-z0-9]{20}\.(?:png|ico|gif|jpg|jpeg|svg|css|js|pdf|map|doc|docx|webmanifest|webp))$" {
        rewrite "^(/(?:.*\.)?[a-z0-9]{20}\.(?:png|ico|gif|jpg|jpeg|svg|css|js|pdf|map|doc|docx|webmanifest|webp))$" /apps/web/dist/$1 break;
    }

     # rewrite talent static unhashed files to "apps/web/dist"
    location ~ "^(/.*\.(?:png|ico|gif|jpg|jpeg|svg|css|js|pdf|map|doc|docx|webmanifest|webp))$" {
        rewrite "^(/.*\.(?:png|ico|gif|jpg|jpeg|svg|css|js|pdf|map|doc|docx|webmanifest|webp))$" /apps/web/dist/$1 break;
    }

    # rewrite possible lang prefix then "talent" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/talent(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/talent(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "admin" to admin index.html
    location ~ "^(?:/[a-z]{2})?/admin(/?.*|$)" {
        rewrite "^(?:/[a-z]{2})?/admin(/?.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "executive" to executive index.html
    location ~ "^(?:/[a-z]{2})?/executive(/?.*|$)" {
        rewrite "^(?:/[a-z]{2})?/executive(/?.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "manager" to manager index.html
    location ~ "^(?:/[a-z]{2})?/manager(/?.*|$)" {
        rewrite "^(?:/[a-z]{2})?/manager(/?.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "users" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/users(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/users(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "search" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/search(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/search(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "logged-out" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/logged-out(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/logged-out(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "user-deleted" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/user-deleted(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/user-deleted(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "browse" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/browse(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/browse(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "404" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/404(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/404(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "support" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/support(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/support(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "support" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/terms-and-conditions(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/terms-and-conditions(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "support" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/privacy-policy(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/privacy-policy(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "accessibility-statement" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/accessibility-statement(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/accessibility-statement(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "directive-on-digital-talent" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/directive-on-digital-talent(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/directive-on-digital-talent(/.*|$)" /apps/web/dist/index.html break;
    }

    # Redirect old "applications" to new profile and applications
    location = /en/applications {
      absolute_redirect off;
      return 301 /en/applicant/profile-and-applications$is_args$args;
    }

    location = /fr/applications/ {
        absolute_redirect off;
        return 301 /fr/applicant/profile-and-applications$is_args$args;
    }

    location = /en/applications/ {
      absolute_redirect off;
      return 301 /en/applicant/profile-and-applications$is_args$args;
    }

    location = /fr/applications {
        absolute_redirect off;
        return 301 /fr/applicant/profile-and-applications$is_args$args;
    }

    # rewrite possible lang prefix then "applications" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/applications(/.*)" {
      rewrite "^(?:/[a-z]{2})?/applications(/.*)" /apps/web/dist/index.html break;
    }

    # Redirect old dashboard to new profile and applications
    location = /en/applicant/dashboard {
      absolute_redirect off;
      return 301 /en/applicant/profile-and-applications$is_args$args;
    }

    location = /fr/applicant/dashboard {
        absolute_redirect off;
        return 301 /fr/applicant/profile-and-applications$is_args$args;
    }

    # rewrite possible lang prefix then "applicant" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/applicant(/.*|$)" {
      rewrite "^(?:/[a-z]{2})?/applicant(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "create-account" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/create-account(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/create-account(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "register-info" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/register-info(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/register-info(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "login-info" to apps/web index.html
    location ~ "^(?:/[a-z]{2})?/login-info(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/login-info(/.*|$)" /apps/web/dist/index.html break;
    }

    # rewrite possible lang prefix then "indigenous-it-apprentice" to web index.html
    location ~ "^(?:/[a-z]{2})?/indigenous-it-apprentice(/.*|$)" {
        rewrite "^(?:/[a-z]{2})?/indigenous-it-apprentice(/.*|$)" /apps/web/dist/index.html break;
    }

    # fallback any other files to "tc-report/_site"
    ## Must be second to last of the file!
    location ~ "^/(.*\.(\w+))$" {
        rewrite "^/(.*\.(\w+))$" /tc-report/_site/$1 break;
    }

    # fallback any other path to "tc-report/_site" index.html
    ## Must be last of the file!
    location ~ ^/(.*)$ {
        rewrite ^/(.*)$ /tc-report/_site/$1/index.html break;
    }
}
