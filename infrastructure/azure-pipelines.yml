name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
parameters:
  - name: buildMode
    displayName: Build mode
    type: string
    default: default
    values:
      - default
      - dev
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - documentation
      - maintenance
pr: none
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
variables:
  phpVersion: "8.4"

jobs:
  - job: build_artifact
    displayName: Build artifact
    pool:
      vmImage: ubuntu-24.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: infrastructure/bin/set_php_versions.sh ${{ variables.phpVersion }}
        displayName: "PHP version"

      - script: |
          if [ ${{ parameters.buildMode }} = 'dev' ]; then
            # -d option to setup the environment with dev dependencies
            echo "Building dev..." && infrastructure/bin/deploy.sh -d -r $(System.DefaultWorkingDirectory)
          else
            # -r option to specify the root directory
            echo "Building default..." && infrastructure/bin/deploy.sh -r $(System.DefaultWorkingDirectory)
          fi
        displayName: Dependencies
        env:
          # Vite requires build-time variable to have the VITE_ prefix
          VITE_API_URI: /graphql
          VITE_API_PROTECTED_URI: /admin/graphql
          VITE_APP_URL:
          VITE_APP_TITLE:
          VITE_APP_DESCRIPTION:
          VITE_APP_DOMAIN:

      - task: CopyFiles@2
        displayName: "Copy files to staging directory"
        inputs:
          SourceFolder: "$(System.DefaultWorkingDirectory)"
          Contents: |
            api/**
            apps/web/dist/**
            infrastructure/**
            tc-report/**
          TargetFolder: "$(Build.ArtifactStagingDirectory)/Stage"

      - task: ArchiveFiles@2
        displayName: "Archive Files"
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Stage"
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/Release/Application_$(Build.BuildId).zip"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: gcDigitalTalent"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)/Release"
          ArtifactName: gcDigitalTalent
