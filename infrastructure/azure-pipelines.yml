name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
parameters:
  - name: buildMode
    displayName: Build mode
    type: string
    default: default
    values:
      - default
      - dev
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - documentation
      - maintenance
pr: none
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
variables:
  phpVersion: "8.4"

jobs:
  - job: build_artifact
    displayName: Build artifact
    pool:
      vmImage: ubuntu-24.04
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      # GitHub runner only includes one version of PHP that is not necessarily the value of the assigned therefore the Personal Package Archive (PPA) is necessary.
      - script: |
          LC_ALL=C.UTF-8 sudo add-apt-repository ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php${{ variables.phpVersion }} php${{ variables.phpVersion }}-mbstring php${{ variables.phpVersion }}-xml php${{ variables.phpVersion }}-pgsql php${{ variables.phpVersion }}-zip php${{ variables.phpVersion }}-curl php${{ variables.phpVersion }}-bcmath php${{ variables.phpVersion }}-gd php${{ variables.phpVersion }}-dom
          php --version
        displayName: "Setup PHP"

      - script: |
          cd $(System.DefaultWorkingDirectory)/api
          sudo composer selfupdate
          if [ ${{ parameters.buildMode }} = 'dev' ]; then
            echo "Building dev..."
            composer install
          else
            echo "Building default..."
            composer install --optimize-autoloader --no-dev
          fi
          sudo chown -R www-data ./storage ./vendor
          sudo chmod -R 775 ./ ./storage
          php artisan lighthouse:print-schema --write
        displayName: Build Backend

      - script: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          source ~/.bash_profile
          nvm install v22.17.0
          npm install -g pnpm@10.17.0
          cd $(System.DefaultWorkingDirectory)
          pnpm install --frozen-lockfile
          pnpm run build
        displayName: Build Frontend
        env:
          # Vite requires build-time variable to have the VITE_ prefix
          VITE_API_URI: /graphql
          VITE_API_PROTECTED_URI: /admin/graphql
          VITE_APP_URL:
          VITE_APP_TITLE:
          VITE_APP_DESCRIPTION:
          VITE_APP_DOMAIN:

      - task: CopyFiles@2
        displayName: "Copy files to staging directory"
        inputs:
          SourceFolder: "$(System.DefaultWorkingDirectory)"
          Contents: |
            api/**
            apps/web/dist/**
            infrastructure/**
          TargetFolder: "$(Build.ArtifactStagingDirectory)/Stage"

      - task: ArchiveFiles@2
        displayName: "Archive Files"
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Stage"
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/Release/Application_$(Build.BuildId).zip"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: gcDigitalTalent"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)/Release"
          ArtifactName: gcDigitalTalent
