version: '3.1'

services:

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_PASSWORD: password1234
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    links:
      - postgres
    ports:
      - 8080:8080

  php:
    build: ./php-container
    working_dir: /var/www/html
    restart: always
    volumes:
      - ./php-container/src:/var/www/html/
      - ../api:/var/www/html/api
      - ../auth:/var/www/html/auth
      - ../frontend:/var/www/html/frontend
    ports:
      - 8000:80
      - 8001:443

  maintenance:
    build: ./maintenance-container
    working_dir: /root/scripts
    deploy:
      mode: replicated
      replicas: 0
    volumes:
      - maintenancedata:/root
      - ../maintenance/scripts:/root/scripts
      - ../api:/var/www/html/api
      - ../auth:/var/www/html/auth
      - ../frontend:/var/www/html/frontend

  # This container is an alternative approach to builds, more closely following
  # docker conventions. For now, it will only be used for performing CI tasks.
  #
  # With a profile designated, it will not build/run unless explicitly executed.
  # See: https://docs.docker.com/compose/profiles/
  api:
    build: ../api
    depends_on:
      - postgres
    profiles:
      - new

volumes:
  pgdata:
  maintenancedata:
